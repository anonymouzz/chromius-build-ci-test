#!/usr/bin/env groovy

pipeline {
    agent none

    options {
        ansiColor('xterm')
    }

    stages {
        stage('clean') {
            parallel {
                stage('clean @ Linux') {
                    agent { label 'linux' }
                    steps {
                        sh '''make clean'''
                    }
                }
                stage('clean @ macOS') {
                    agent { label 'macOS' }
                    steps {
                        sh '''make clean'''
                    }
                }
                stage('clean @ Windows') {
                    agent { label 'windows' }
                    steps {
                        bat """
                            rd /s /q dist
                            rd /s /q c:\\chrome\\chromium\\src\\out
                        """
                    }
                }
            }
        }
        stage('build') {
            parallel {
                stage('build @ Linux') {
                    agent { label 'linux' }
                    steps {
                        sh '''make build'''
                    }
                }
                stage('build @ macOS') {
                    agent { label 'macOS' }
                    steps {
                        sh '''make build'''
                    }
                }
                stage('build @ Windows') {
                    agent { label 'windows' }
                    steps {
                        bat """
                            cd c:\\chrome\\chromium\\src
                            gn gen out/Default --args="is_component_build = true is_debug = false blink_symbol_level = 0 v8_symbol_level = 0"
                        """
                        bat """
                            cd c:\\chrome\\chromium\\src
                            c:\\chrome\\depot_tools\\autoninja.bat -C out\\Default chrome
                        """
                    }
                }
            }
        }
        stage('package') {
            parallel {
                stage('package @ Linux') {
                    agent { label 'linux' }
                    steps {
                        sh '''make package'''
                    }
                    post {
                        always {
                            archiveArtifacts artifacts: 'dist/*.deb', fingerprint: true
                        }
                    }
                }
                stage('package @ macOS') {
                    agent { label 'macOS' }
                    steps {
                        sh '''make package'''
                    }
                    post {
                        always {
                            archiveArtifacts artifacts: 'dist/*.bz2', fingerprint: true
                        }
                    }
                }
                stage('package @ Windows') {
                    agent { label 'windows' }
                    steps {
                        bat """
                            cd c:\\chrome\\chromium\\src
                            c:\\chrome\\depot_tools\\autoninja.bat -C out\\Default mini_installer
                        """
                        bat """
                            mkdir dist
                            xcopy c:\\chrome\\chromium\\src\\out\\Default\\mini_installer.exe dist
                        """
                    }
                    post {
                        always {
                            archiveArtifacts artifacts: 'dist/mini_installer.exe', fingerprint: true
                        }
                    }
                }

            }
        }
    }
}
